@using ICM.Cloud.Storage.CloudProxy
@model ICM.Web.Models.CaseManagement

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Update Case Management</h2>
@using (Html.BeginForm("ModifyCaseManagement", "Management", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CaseManagementID)
    <div class="panel panel-default">
        <div class="panel-heading">
            <b></b>
        </div><br />
        <div class="form-horizontal">
            @Html.HiddenFor(model => model.CaseManagementID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CaseManagementID, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.DocumentTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DocumentTypeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DocumentTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.NewFileName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewFileName, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.HCAIStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HCAIStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HCAIStatus, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateOfService, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfService, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DateOfService, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GoodAndServiceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GoodAndServiceID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GoodAndServiceID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GoodAndServiceAtt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GoodAndServiceAtt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoodAndServiceAtt, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GoodAndServiceDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GoodAndServiceDesc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoodAndServiceDesc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.AppointmentResourceID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AppointmentResourceID, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.GSTHSTVAT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GSTHSTVAT, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.MeasureID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("MeasureID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MeasureID, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.LineCost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LineCost, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Billed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Billed, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PSTOther, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PSTOther, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.PlanNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PlanNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlanNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PaymentAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaymentAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaymentAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BilledAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BilledAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BilledAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ApprovedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApprovedAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApprovedAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
               @Html.Label("Filename", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="newMakeforFile">
                <input  type="file" id="Filename" name="upload" />@if (!string.IsNullOrEmpty(Model.FileName)){ @Html.ActionLink(Model.FileName, "Download", new { fileName=@Model.NewFileName});
                                                                     TempData["realName"] = Model.FileName;
                                                                 }
                                                                
            </div>
            </div>

            @Html.HiddenFor(model => model.Visible, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.WIPAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WIPAmount, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CreatedOrUpdated, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.CreatedOrUpdated, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CaseID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CaseID, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CaseActivityID, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.HiddenFor(model => model.CaseProviderID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CaseProviderID, "", new { @class = "text-danger" })*@


            @Html.HiddenFor(model => model.By, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.By, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" id="linkforFile">
                    <input type="submit" value="Save" id="Edit" class="btn btn-default" />
                    <input type="button" value="Back" class="btn btn-default" onclick="window.history.back()" />
                </div>
            </div>
        </div>
    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}








