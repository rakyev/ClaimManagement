@model ICM.Web.Models.CaseMVA

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Update Case MVA</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CaseMVAID)
    <div class="panel panel-default">
        <div class="panel-heading">
            <b></b>
        </div><br />
        <div class="form-horizontal">

            <div class="form-group">

                <div class="col-md-10">
                    @Html.HiddenFor(model => model.CaseMVAID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CaseMVAID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClaimNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClaimNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClaimNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateofAccident, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateofAccident, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DateofAccident, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PolicyHolderFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PolicyHolderFirstName, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.PolicyHolderFirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PolicyHolderLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PolicyHolderLastName, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.PolicyHolderLastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LanguageID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LanguageID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LanguageID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AdjusterID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AdjusterID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AdjusterID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.HiddenFor(model => model.CaseID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CaseID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" id="Edit" class="btn btn-default" />
                    <input type="button" value="Back" class="btn btn-default" onclick="window.history.back()" />
                </div>
            </div>


            @Html.HiddenFor(model => model.CAT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CAT, "", new { @class = "text-danger" })


            @Html.HiddenFor(model => model.TransportationRequired, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TransportationRequired, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.InterpreterRequired, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InterpreterRequired, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.PolicyHolderSameAsApplicant, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PolicyHolderSameAsApplicant, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.IsThereOtherInsuranceCoverage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsThereOtherInsuranceCoverage, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.Closed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Closed, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.ClosedDate, new { htmlAttributes = new { @class = "form-control" } })

            @Html.HiddenFor(model => model.OtherInsurer1Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer1Name, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer1Plan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer1Plan, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer1PolicyNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer1PolicyNumber, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer1NameofThePlanMember, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer1NameofThePlanMember, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer1Identifier, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer1Identifier, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer2Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer2Name, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer2Plan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer2Plan, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer2PolicyNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer2PolicyNumber, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer2NameofThePlanMember, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer2NameofThePlanMember, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.OtherInsurer2Identifier, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OtherInsurer2Identifier, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.By, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.By, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.CreatedOrUpdated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedOrUpdated, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })

            @Html.HiddenFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })


        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
